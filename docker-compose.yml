version: '2.4' # 3.8

services:
  ros-master:
    container_name: ros-master
    ports: # not necessary, works fine without, only required for host mode 
      - 11311:11311
    image: ros:kinetic
    command: stdbuf -o L roscore
    networks:
      - ros
    restart: unless-stopped

  # talker:
  #   image: ros:kinetic
  #   depends_on:
  #     - ros-master
  #   environment:
  #     - "ROS_MASTER_URI=http://ros-master:11311"
  #     - "ROS_HOSTNAME=talker"
  #   command: stdbuf -o L rostopic pub /chatter std_msgs/String "hello" -r 1
  #   networks:
  #     - ros
  #   restart: unless-stopped

  # listener:
  #   image: ros:kinetic
  #   depends_on:
  #     - ros-master
  #   environment:
  #     - "ROS_MASTER_URI=http://ros-master:11311"
  #     - "ROS_HOSTNAME=listener"
  #   command: stdbuf -o L rostopic echo /chatter
  #   networks:
  #     - ros
  #   restart: unless-stopped

  novnc:
    image: theasp/novnc:latest
    container_name: novnc
    environment:
      # Adjust to your screen size
      - DISPLAY_WIDTH=1600
      - DISPLAY_HEIGHT=968
      - RUN_XTERM=no
    ports:
      - "8080:8080"
    networks:
      - ros
    restart: unless-stopped

  ros-rviz:
    container_name: ros-rviz
    build: ./build-rviz
    depends_on:
      - ros-master
      - novnc
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    environment:
      - "ROS_MASTER_URI=http://ros-master:11311"
      - "ROS_HOSTNAME=ros-rviz" # must be the container_name
      - DISPLAY=novnc:0.0
    command: stdbuf -o L rosrun rviz rviz
    networks:
      - ros
    restart: unless-stopped

  ros-vision-pipeline:
    container_name: ros-vision-pipeline
    build: ./build
    # get output from python scripts to docker log using stdin_open and tty
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    depends_on:
      - ros-master
    environment:
      # - "ROS_MASTER_URI=http://ros-master:11311"
      # - "ROS_HOSTNAME=localhost" # must be the container_name
      # for network_mode: host, do this:
      - ROS_MASTER_URI=http://localhost:11311
      - ROS_IP=192.168.1.200 # $ hostname -I
      - NVIDIA_VISIBLE_DEVICES=0
      - NVIDIA_DRIVER_CAPABILITIES=all
      - GITHUB_APP_PASSWORD=${GITHUB_APP_PASSWORD} # set this in the .env file
    volumes:
      - ./data:/root/data
      - $HOME/projects/vision-pipeline:/root/vision-pipeline
    network_mode: host # workaround to use the camera
    # networks:
    #   - ros
    restart: unless-stopped

networks:
  ros:
    driver: bridge